Index: libiwinfo-2021-04-30-c45f0b58/Makefile
===================================================================
--- libiwinfo-2021-04-30-c45f0b58.orig/Makefile
+++ libiwinfo-2021-04-30-c45f0b58/Makefile
@@ -35,6 +35,11 @@ ifneq ($(filter nl80211,$(IWINFO_BACKEND
 endif
 
 
+ifneq ($(filter mtk,$(IWINFO_BACKENDS)),)
+	IWINFO_CFLAGS  += -DUSE_MTK
+	IWINFO_LIB_OBJ += iwinfo_mtk.o
+endif
+
 compile: clean $(IWINFO_LIB) $(IWINFO_LUA) $(IWINFO_CLI)
 
 %.o: %.c
Index: libiwinfo-2021-04-30-c45f0b58/include/iwinfo.h
===================================================================
--- libiwinfo-2021-04-30-c45f0b58.orig/include/iwinfo.h
+++ libiwinfo-2021-04-30-c45f0b58/include/iwinfo.h
@@ -305,6 +305,7 @@ extern const struct iwinfo_ops wext_ops;
 extern const struct iwinfo_ops madwifi_ops;
 extern const struct iwinfo_ops nl80211_ops;
 extern const struct iwinfo_ops wl_ops;
+extern const struct iwinfo_ops mtk_ops;
 
 #include "iwinfo/utils.h"
 
Index: libiwinfo-2021-04-30-c45f0b58/iwinfo_lib.c
===================================================================
--- libiwinfo-2021-04-30-c45f0b58.orig/iwinfo_lib.c
+++ libiwinfo-2021-04-30-c45f0b58/iwinfo_lib.c
@@ -339,6 +339,9 @@ static const struct iwinfo_ops *backends
 #ifdef USE_WL
 	&wl_ops,
 #endif
+#ifdef USE_MTK
+	&mtk_ops,
+#endif
 	&wext_ops,
 };
 
Index: libiwinfo-2021-04-30-c45f0b58/include/iwinfo/lua.h
===================================================================
--- libiwinfo-2021-04-30-c45f0b58.orig/include/iwinfo/lua.h
+++ libiwinfo-2021-04-30-c45f0b58/include/iwinfo/lua.h
@@ -41,6 +41,9 @@
 #define IWINFO_NL80211_META	"iwinfo.nl80211"
 #endif
 
+#ifdef USE_MTK
+#define IWINFO_MTK_META	"iwinfo.mtk"
+#endif
 
 #define LUA_REG(type,op) \
 	{ #op, iwinfo_L_##type##_##op }
Index: libiwinfo-2021-04-30-c45f0b58/iwinfo_lua.c
===================================================================
--- libiwinfo-2021-04-30-c45f0b58.orig/iwinfo_lua.c
+++ libiwinfo-2021-04-30-c45f0b58/iwinfo_lua.c
@@ -769,6 +769,15 @@ LUA_WRAP_STRUCT_OP(nl80211,mbssid_suppor
 LUA_WRAP_STRUCT_OP(nl80211,hardware_id)
 #endif
 
+#ifdef USE_MTK
+LUA_WRAP_INT_OP(mtk,channel)
+LUA_WRAP_STRING_OP(mtk,ssid)
+LUA_WRAP_STRING_OP(mtk,bssid)
+LUA_WRAP_STRING_OP(mtk,phyname)
+LUA_WRAP_STRUCT_OP(mtk,mode)
+LUA_WRAP_STRUCT_OP(mtk,assoclist)
+#endif
+
 /* Wext */
 LUA_WRAP_INT_OP(wext,channel)
 LUA_WRAP_INT_OP(wext,frequency)
@@ -896,6 +905,19 @@ static const luaL_reg R_nl80211[] = {
 };
 #endif
 
+#ifdef USE_MTK
+/* NL80211 table */
+static const luaL_reg R_mtk[] = {
+	LUA_REG(mtk,channel),
+	LUA_REG(mtk,mode),
+	LUA_REG(mtk,ssid),
+	LUA_REG(mtk,bssid),
+	LUA_REG(mtk,assoclist),
+	LUA_REG(mtk,phyname),
+	{ NULL, NULL }
+};
+#endif
+
 /* Wext table */
 static const luaL_reg R_wext[] = {
 	LUA_REG(wext,channel),
@@ -965,6 +987,15 @@ LUALIB_API int luaopen_iwinfo(lua_State
 	lua_setfield(L, -2, "nl80211");
 #endif
 
+#ifdef USE_MTK
+	luaL_newmetatable(L, IWINFO_MTK_META);
+	luaL_register(L, NULL, R_common);
+	luaL_register(L, NULL, R_mtk);
+	lua_pushvalue(L, -1);
+	lua_setfield(L, -2, "__index");
+	lua_setfield(L, -2, "mtk");
+#endif
+
 	luaL_newmetatable(L, IWINFO_WEXT_META);
 	luaL_register(L, NULL, R_common);
 	luaL_register(L, NULL, R_wext);
